import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Valida√ß√£o Limite 5¬µSv/h - GLP", layout="wide")

# Sidebar para navega√ß√£o entre p√°ginas
st.sidebar.title("üìë Navega√ß√£o")
pagina_selecionada = st.sidebar.radio(
    "Selecione a p√°gina:",
    ["üìä An√°lise Principal", "üî¨ Estudo Detalhado"]
)

# Fun√ß√£o para carregar dados (mantida igual)
@st.cache_data
def load_data():
    # Carregar os dados do arquivo Excel
    df = pd.read_excel("Resultados de an√°lises radiom√©tricas - GLP.xlsx", sheet_name="Maca√©")
    
    # Limpeza e prepara√ß√£o dos dados
    df.columns = [str(col).strip() for col in df.columns]
    
    # Converter colunas num√©ricas
    numeric_columns = ['Taxa de Dose M√°xima (¬µSv/h)', 'Resultado_ra226', 'Resultado_ra228']
    
    for col in numeric_columns:
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')
    
    # FILTRAR APENAS DADOS AT√â 8 Bq/g (conforme solicita√ß√£o do gerente)
    df_filtrado = df[
        (df['Resultado_ra226'] <= 8.0) & 
        (df['Resultado_ra228'] <= 8.0) &
        (df['Resultado_ra226'].notna()) &
        (df['Resultado_ra228'].notna()) &
        (df['Taxa de Dose M√°xima (¬µSv/h)'].notna())
    ].copy()
    
    return df, df_filtrado

# Fun√ß√£o para calcular estat√≠sticas (mantida igual)
def calcular_estatisticas_radionuclideos(df):
    stats_dict = {}
    
    # Para Ra-226
    ra226_valid = df['Resultado_ra226'].notna()
    stats_dict['Ra226'] = {
        'total': ra226_valid.sum(),
        'ate_1bq': (df[ra226_valid]['Resultado_ra226'] <= 1.0).sum(),
        '1_3bq': ((df[ra226_valid]['Resultado_ra226'] > 1.0) & (df[ra226_valid]['Resultado_ra226'] <= 3.0)).sum(),
        '3_5bq': ((df[ra226_valid]['Resultado_ra226'] > 3.0) & (df[ra226_valid]['Resultado_ra226'] <= 5.0)).sum(),
        '5_8bq': ((df[ra226_valid]['Resultado_ra226'] > 5.0) & (df[ra226_valid]['Resultado_ra226'] <= 8.0)).sum(),
        'media': df[ra226_valid]['Resultado_ra226'].mean(),
        'maxima': df[ra226_valid]['Resultado_ra226'].max()
    }
    
    # Para Ra-228
    ra228_valid = df['Resultado_ra228'].notna()
    stats_dict['Ra228'] = {
        'total': ra228_valid.sum(),
        'ate_1bq': (df[ra228_valid]['Resultado_ra228'] <= 1.0).sum(),
        '1_3bq': ((df[ra228_valid]['Resultado_ra228'] > 1.0) & (df[ra228_valid]['Resultado_ra228'] <= 3.0)).sum(),
        '3_5bq': ((df[ra228_valid]['Resultado_ra228'] > 3.0) & (df[ra228_valid]['Resultado_ra228'] <= 5.0)).sum(),
        '5_8bq': ((df[ra228_valid]['Resultado_ra228'] > 5.0) & (df[ra228_valid]['Resultado_ra228'] <= 8.0)).sum(),
        'media': df[ra228_valid]['Resultado_ra228'].mean(),
        'maxima': df[ra228_valid]['Resultado_ra228'].max()
    }
    
    return stats_dict

# Fun√ß√£o para calcular estat√≠stica descritiva da Taxa de Dose M√°xima
def calcular_estatisticas_dose(df):
    dose_data = df['Taxa de Dose M√°xima (¬µSv/h)'].dropna()
    
    if len(dose_data) == 0:
        return None
    
    estatisticas = {
        'count': len(dose_data),
        'mean': dose_data.mean(),
        'std': dose_data.std(),
        'min': dose_data.min(),
        '25%': dose_data.quantile(0.25),
        '50%': dose_data.quantile(0.50),  # mediana
        '75%': dose_data.quantile(0.75),
        'max': dose_data.max(),
        'range': dose_data.max() - dose_data.min(),
        'cv': (dose_data.std() / dose_data.mean()) * 100 if dose_data.mean() != 0 else 0,  # coeficiente de varia√ß√£o
        'skewness': dose_data.skew(),
        'kurtosis': dose_data.kurtosis()
    }
    
    # Percentis adicionais
    percentis = [90, 95, 99]
    for p in percentis:
        estatisticas[f'P{p}'] = dose_data.quantile(p/100)
    
    return estatisticas

# P√ÅGINA PRINCIPAL
if pagina_selecionada == "üìä An√°lise Principal":
    
    # T√≠tulo da aplica√ß√£o
    titulo = "üìä Valida√ß√£o do Limite Operacional de 5 ¬µSv/h"
    sub_titulo = "An√°lise com base em concentra√ß√µes at√© 8 Bq/g de Ra-226 e Ra-228"

    # Usa st.markdown para renderizar a tag <h1> com alinhamento centralizado
    st.markdown(f"<h1 style='text-align: center;'>{titulo}</h1>", unsafe_allow_html=True)
    st.markdown(f"<h3 style='text-align: center;'>{sub_titulo}</h3>", unsafe_allow_html=True)

    # Carregar dados
    df_original, df = load_data()

    # Sidebar com informa√ß√µes
    st.sidebar.header("üéØ Objetivo da An√°lise")
    st.sidebar.info("""
    Validar se o limite de 5 ¬µSv/h √© adequado, analisando dados com concentra√ß√µes at√© 8 Bq/g.
    """)

    st.sidebar.header("üîß Configura√ß√µes")
    show_all_data = st.sidebar.checkbox("Mostrar an√°lise com todos os dados", value=False)

    if show_all_data:
        df_analysis = df_original
        st.sidebar.warning("‚ö†Ô∏è Mostrando TODOS os dados (incluindo acima de 8 Bq/g)")
    else:
        df_analysis = df
        st.sidebar.success("‚úÖ Analisando apenas dados ‚â§ 8 Bq/g")

    # Calcular estat√≠sticas para o dataframe em an√°lise
    stats_radionuclideos = calcular_estatisticas_radionuclideos(df_analysis)
    stats_dose = calcular_estatisticas_dose(df_analysis)

    # Layout principal - RESUMO EXECUTIVO SIMPLES
    st.header("üìã VIS√ÉO GERAL DOS RESULTADOS")

    # PRIMEIRA LINHA: M√©tricas principais
    col1, col2, col3, col4 = st.columns(4)

    with col1:
        total_amostras = len(df_analysis)
        st.metric("Total de Amostras Analisadas", total_amostras)

    with col2:
        amostras_ate_5usv = len(df_analysis[df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] <= 5.0])
        percentual_ate_5usv = (amostras_ate_5usv / total_amostras * 100) if total_amostras > 0 else 0
        st.metric("Dentro do Limite", f"{amostras_ate_5usv} ({percentual_ate_5usv:.1f}%)")

    with col3:
        amostras_acima_5usv = len(df_analysis[df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] > 5.0])
        percentual_acima_5usv = (amostras_acima_5usv / total_amostras * 100) if total_amostras > 0 else 0
        st.metric("Acima do Limite", f"{amostras_acima_5usv} ({percentual_acima_5usv:.1f}%)")

    with col4:
        max_dose = df_analysis['Taxa de Dose M√°xima (¬µSv/h)'].max() if total_amostras > 0 else 0
        st.metric("Maior Dose Encontrada", f"{max_dose:.2f} ¬µSv/h")

    # NOVA SE√á√ÉO: ESTAT√çSTICA DESCRITIVA DA TAXA DE DOSE M√ÅXIMA (COM CHECKBOX)
    if st.checkbox("üìä Exibir Estat√≠stica Descritiva - Taxa de Dose M√°xima (¬µSv/h)"):
        st.header("üìä Estat√≠stica Descritiva - Taxa de Dose M√°xima (¬µSv/h)")
        
        if stats_dose:
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.subheader("Medidas de Tend√™ncia Central")
                st.metric("M√©dia", f"{stats_dose['mean']:.4f} ¬µSv/h")
                st.metric("Mediana (P50)", f"{stats_dose['50%']:.4f} ¬µSv/h")
                st.metric("Moda", f"{df_analysis['Taxa de Dose M√°xima (¬µSv/h)'].mode().iloc[0] if not df_analysis['Taxa de Dose M√°xima (¬µSv/h)'].mode().empty else 'N/A'} ¬µSv/h")
            
            with col2:
                st.subheader("Medidas de Dispers√£o")
                st.metric("Desvio Padr√£o", f"{stats_dose['std']:.4f} ¬µSv/h")
                st.metric("Amplitude", f"{stats_dose['range']:.4f} ¬µSv/h")
                st.metric("Coef. Varia√ß√£o", f"{stats_dose['cv']:.2f}%")
            
            with col3:
                st.subheader("Valores Extremos")
                st.metric("M√≠nimo", f"{stats_dose['min']:.4f} ¬µSv/h")
                st.metric("M√°ximo", f"{stats_dose['max']:.4f} ¬µSv/h")
                st.metric("Amplitude Interquartil", f"{stats_dose['75%'] - stats_dose['25%']:.4f} ¬µSv/h")
            
            # Quartis e Percentis
            st.subheader("Quartis e Percentis")
            col1, col2, col3, col4, col5 = st.columns(5)
            
            with col1:
                st.metric("Q1 (25%)", f"{stats_dose['25%']:.4f} ¬µSv/h")
            with col2:
                st.metric("Q2 (50%)", f"{stats_dose['50%']:.4f} ¬µSv/h")
            with col3:
                st.metric("Q3 (75%)", f"{stats_dose['75%']:.4f} ¬µSv/h")
            with col4:
                st.metric("P90", f"{stats_dose['P90']:.4f} ¬µSv/h")
            with col5:
                st.metric("P95", f"{stats_dose['P95']:.4f} ¬µSv/h")
            
            # Medidas de Forma
            st.subheader("Medidas de Forma da Distribui√ß√£o")
            col1, col2 = st.columns(2)
            
            with col1:
                st.metric("Assimetria (Skewness)", f"{stats_dose['skewness']:.4f}")
                if stats_dose['skewness'] > 0:
                    st.info("Distribui√ß√£o assim√©trica positiva (vi√©s √† direita)")
                elif stats_dose['skewness'] < 0:
                    st.info("Distribui√ß√£o assim√©trica negativa (vi√©s √† esquerda)")
                else:
                    st.info("Distribui√ß√£o sim√©trica")
            
            with col2:
                st.metric("Curtose (Kurtosis)", f"{stats_dose['kurtosis']:.4f}")
                if stats_dose['kurtosis'] > 0:
                    st.info("Distribui√ß√£o leptoc√∫rtica (picos mais altos, caudas mais pesadas)")
                elif stats_dose['kurtosis'] < 0:
                    st.info("Distribui√ß√£o platic√∫rtica (picos mais baixos, caudas mais leves)")
                else:
                    st.info("Distribui√ß√£o mesoc√∫rtica (similar √† normal)")
            
            # Tabela resumo completa
            st.subheader("Tabela Resumo Completa")
            resumo_data = {
                'Estat√≠stica': [
                    'N√∫mero de amostras', 'M√©dia', 'Desvio Padr√£o', 'M√≠nimo', 
                    'Primeiro Quartil (Q1)', 'Mediana (Q2)', 'Terceiro Quartil (Q3)', 
                    'M√°ximo', 'Amplitude', 'Amplitude Interquartil (IQR)',
                    'Coeficiente de Varia√ß√£o', 'P90', 'P95', 'P99',
                    'Assimetria (Skewness)', 'Curtose (Kurtosis)'
                ],
                'Valor': [
                    stats_dose['count'],
                    f"{stats_dose['mean']:.4f}",
                    f"{stats_dose['std']:.4f}",
                    f"{stats_dose['min']:.4f}",
                    f"{stats_dose['25%']:.4f}",
                    f"{stats_dose['50%']:.4f}",
                    f"{stats_dose['75%']:.4f}",
                    f"{stats_dose['max']:.4f}",
                    f"{stats_dose['range']:.4f}",
                    f"{stats_dose['75%'] - stats_dose['25%']:.4f}",
                    f"{stats_dose['cv']:.2f}%",
                    f"{stats_dose['P90']:.4f}",
                    f"{stats_dose['P95']:.4f}",
                    f"{stats_dose['P99']:.4f}",
                    f"{stats_dose['skewness']:.4f}",
                    f"{stats_dose['kurtosis']:.4f}"
                ],
                'Interpreta√ß√£o': [
                    'Total de observa√ß√µes v√°lidas',
                    'Valor m√©dio das taxas de dose',
                    'Dispers√£o em torno da m√©dia',
                    'Menor valor observado',
                    '25% dos dados est√£o abaixo deste valor',
                    '50% dos dados est√£o abaixo deste valor',
                    '75% dos dados est√£o abaixo deste valor',
                    'Maior valor observado',
                    'Diferen√ßa entre m√°ximo e m√≠nimo',
                    'Diferen√ßa entre Q3 e Q1 (dispers√£o central)',
                    'Desvio padr√£o relativo √† m√©dia',
                    '90% dos dados est√£o abaixo deste valor',
                    '95% dos dados est√£o abaixo deste valor',
                    '99% dos dados est√£o abaixo deste valor',
                    'Simetria da distribui√ß√£o',
                    '"Pico" da distribui√ß√£o'
                ]
            }
            
            resumo_df = pd.DataFrame(resumo_data)
            st.dataframe(resumo_df, use_container_width=True)
            
        else:
            st.warning("N√£o h√° dados suficientes para calcular estat√≠sticas descritivas.")

    # SEGUNDA LINHA: Estat√≠sticas dos Radionucl√≠deos
    st.subheader("üìä Estat√≠sticas por Radionucl√≠deo")

    col1, col2 = st.columns(2)

    with col1:
        st.write("**Ra-226**")
        ra226 = stats_radionuclideos['Ra226']
        st.write(f"""
        - **Total de amostras:** {ra226['total']}
        - **Distribui√ß√£o por faixa:**
          - ‚â§ 1.0 Bq/g: {ra226['ate_1bq']} amostras
          - 1.1 - 3.0 Bq/g: {ra226['1_3bq']} amostras  
          - 3.1 - 5.0 Bq/g: {ra226['3_5bq']} amostras
          - 5.1 - 8.0 Bq/g: {ra226['5_8bq']} amostras
        - **M√©dia:** {ra226['media']:.2f} Bq/g
        - **M√°xima:** {ra226['maxima']:.2f} Bq/g
        """)

    with col2:
        st.write("**Ra-228**")
        ra228 = stats_radionuclideos['Ra228']
        st.write(f"""
        - **Total de amostras:** {ra228['total']}
        - **Distribui√ß√£o por faixa:**
          - ‚â§ 1.0 Bq/g: {ra228['ate_1bq']} amostras
          - 1.1 - 3.0 Bq/g: {ra228['1_3bq']} amostras  
          - 3.1 - 5.0 Bq/g: {ra228['3_5bq']} amostras
          - 5.1 - 8.0 Bq/g: {ra228['5_8bq']} amostras
        - **M√©dia:** {ra228['media']:.2f} Bq/g
        - **M√°xima:** {ra228['maxima']:.2f} Bq/g
        """)

    # AN√ÅLISE SIMPLIFICADA - O QUE OS N√öMEROS SIGNIFICAM
    st.header("An√°lise da vari√°vel qualitativa continua Taxa de Dose M√°xima (¬µSv/h)")

    if total_amostras > 0:
        # C√°lculos importantes
        dose_90th = np.percentile(df_analysis['Taxa de Dose M√°xima (¬µSv/h)'], 90)
        dose_95th = np.percentile(df_analysis['Taxa de Dose M√°xima (¬µSv/h)'], 95)
        dose_99th = np.percentile(df_analysis['Taxa de Dose M√°xima (¬µSv/h)'], 99)
        
        # VISUALIZA√á√ÉO SIMPLES COM SEM√ÅFORO
        st.subheader("üìä Situa√ß√£o das Amostras")
        
        # Criar colunas para o sem√°foro
        col1, col2, col3 = st.columns(3)
        
        with col1:
            baixo_risco = len(df_analysis[df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] <= 3.0])
            perc_baixo = (baixo_risco / total_amostras * 100)
            st.success(f"""
            **MENOR OU IGUAL A 3.0**
            
            **{baixo_risco} amostras** ({perc_baixo:.1f}%)
            
            *Dose ‚â§ 3.0 ¬µSv/h*
            """)
        
        with col2:
            medio_risco = len(df_analysis[(df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] > 3.0) & 
                                        (df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] <= 5.0)])
            perc_medio = (medio_risco / total_amostras * 100)
            st.warning(f"""
            **MAIOR QUE 3.0 E MENOR OU IGUAL 5.0**
            
            **{medio_risco} amostras** ({perc_medio:.1f}%)
            
            *Dose entre 3.1-5.0 ¬µSv/h*
            """)
        
        with col3:
            alto_risco = len(df_analysis[df_analysis['Taxa de Dose M√°xima (¬µSv/h)'] > 5.0])
            perc_alto = (alto_risco / total_amostras * 100)
            st.error(f"""
            **MAIOR QUE 5.0**
            
            **{alto_risco} amostras** ({perc_alto:.1f}%)
            
            *Dose > 5.0 ¬µSv/h*
            """)
        
        # EXPLICA√á√ÉO DOS PERCENTIS COM LINGUAGEM SIMPLES
        st.subheader("Entendendo os Percentis")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.info(f"""
            **üìà O que os percentis mostram:**
            
            **P90 = {dose_90th:.2f} ¬µSv/h**  
            üëâ 90% das amostras t√™m dose ‚â§ {dose_90th:.2f} ¬µSv/h
            
            **P95 = {dose_95th:.2f} ¬µSv/h**  
            üëâ 95% das amostras t√™m dose ‚â§ {dose_95th:.2f} ¬µSv/h
            
            **P99 = {dose_99th:.2f} ¬µSv/h**  
            üëâ 99% das amostras t√™m dose ‚â§ {dose_99th:.2f} ¬µSv/h
            """)
        
        # GR√ÅFICO SIMPLES DE DISTRIBUI√á√ÉO
        st.subheader("üìä Visualiza√ß√£o da Distribui√ß√£o das Doses")
        
        fig, ax = plt.subplots(figsize=(12, 6))
        
        # Criar √°reas coloridas
        ax.axvspan(0, 3.0, alpha=0.3, color='green', label='Baixo Risco (‚â§ 3.0 ¬µSv/h)')
        ax.axvspan(3.0, 5.0, alpha=0.3, color='yellow', label='Aten√ß√£o (3.1-5.0 ¬µSv/h)')
        ax.axvspan(5.0, max(10, max_dose), alpha=0.3, color='red', label='Alto Risco (> 5.0 ¬µSv/h)')
        
        # Histograma
        n, bins, patches = ax.hist(df_analysis['Taxa de Dose M√°xima (¬µSv/h)'], 
                                  bins=15, alpha=0.7, color='blue', edgecolor='black')
        
        # Linhas dos percentis
        ax.axvline(x=dose_90th, color='orange', linestyle='--', linewidth=2, 
                   label=f'90% das amostras ‚â§ {dose_90th:.1f} ¬µSv/h')
        ax.axvline(x=dose_95th, color='red', linestyle='--', linewidth=2, 
                   label=f'95% das amostras ‚â§ {dose_95th:.1f} ¬µSv/h')
        
        ax.set_xlabel('Taxa de Dose (¬µSv/h)')
        ax.set_ylabel('N√∫mero de Amostras')
        ax.set_title('Distribui√ß√£o das Taxas de Dose - Vis√£o Simplificada')
        ax.legend()
        ax.grid(True, alpha=0.3)
        
        st.pyplot(fig)

        # RECOMENDA√á√ÉO PR√ÅTICA E CLARA
        st.header("RECOMENDA√á√ÉO PR√ÅTICA")
        
        if percentual_ate_5usv >= 95 and dose_95th <= 5.0:
            st.success(f"""
            **‚úÖ MANTENHA O LIMITE DE 5 ¬µSv/h**
            
            **Por que essa recomenda√ß√£o?**
            
            ‚úÖ **{percentual_ate_5usv:.1f}% das amostras** est√£o DENTRO do limite  
            ‚úÖ **95% das amostras** t√™m dose ‚â§ **{dose_95th:.2f} ¬µSv/h**  
            ‚úÖ **Margem de seguran√ßa** adequada  
            ‚úÖ Limite est√° **funcionando bem**
            
            **Pr√≥ximos passos:** Continue monitorando normalmente.
            """)
            
        elif percentual_ate_5usv >= 90:
            st.warning(f"""
            **‚ö†Ô∏è AVALIE COM CUIDADE O LIMITE DE 5 ¬µSv/h**
            
            **Por que essa recomenda√ß√£o?**
            
            ‚ö†Ô∏è **{percentual_ate_5usv:.1f}% das amostras** est√£o dentro do limite  
            ‚ö†Ô∏è **95% das amostras** t√™m dose ‚â§ **{dose_95th:.2f} ¬µSv/h**  
            ‚ö†Ô∏è **Pouca margem** de seguran√ßa  
            ‚ö†Ô∏è **{amostras_acima_5usv} amostras** ({percentual_acima_5usv:.1f}%) acima do limite
            
            **Pr√≥ximos passos:** Aumente a frequ√™ncia de monitoramento.
            """)
            
        else:
            st.error(f"""
            **‚ùå REAVALIE O LIMITE DE 5 ¬µSv/h**
            
            **Por que essa recomenda√ß√£o?**
            
            ‚ùå Apenas **{percentual_ate_5usv:.1f}%** dentro do limite  
            ‚ùå **{amostras_acima_5usv} amostras** ({percentual_acima_5usv:.1f}%) acima do limite  
            ‚ùå **95% das amostras** t√™m dose ‚â§ **{dose_95th:.2f} ¬µSv/h**  
            ‚ùå **Risco frequente** de ultrapassar o limite
            
            **Pr√≥ximos passos:** Considere ajustar o limite ou melhorar controles.
            """)

        # RELA√á√ÉO ENTRE CONCENTRA√á√ÉO E DOSE (SIMPLES)
        st.header("Rela√ß√£o: Concentra√ß√£o vs Dose")
        
        st.write(f"""
        **Contexto das amostras analisadas:**
        - **Ra-226:** {stats_radionuclideos['Ra226']['total']} amostras v√°lidas
        - **Ra-228:** {stats_radionuclideos['Ra228']['total']} amostras v√°lidas  
        - **An√°lise:** Vamos ver se amostras com maior concentra√ß√£o t√™m maior dose
        """)
        
        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 5))
        
        # Ra-226 vs Dose
        scatter1 = ax1.scatter(df_analysis['Resultado_ra226'], 
                              df_analysis['Taxa de Dose M√°xima (¬µSv/h)'],
                              alpha=0.6, c='blue', s=50)
        ax1.axhline(y=5.0, color='red', linestyle='--', linewidth=2, label='Limite 5 ¬µSv/h')
        ax1.set_xlabel('Concentra√ß√£o de Ra-226 (Bq/g)')
        ax1.set_ylabel('Taxa de Dose (¬µSv/h)')
        ax1.set_title('Ra-226: Maior concentra√ß√£o = Maior dose?')
        ax1.legend()
        ax1.grid(True, alpha=0.3)
        
        # Ra-228 vs Dose
        scatter2 = ax2.scatter(df_analysis['Resultado_ra228'], 
                              df_analysis['Taxa de Dose M√°xima (¬µSv/h)'],
                              alpha=0.6, c='red', s=50)
        ax2.axhline(y=5.0, color='red', linestyle='--', linewidth=2, label='Limite 5 ¬µSv/h')
        ax2.set_xlabel('Concentra√ß√£o de Ra-228 (Bq/g)')
        ax2.set_ylabel('Taxa de Dose (¬µSv/h)')
        ax2.set_title('Ra-228: Maior concentra√ß√£o = Maior dose?')
        ax2.legend()
        ax2.grid(True, alpha=0.3)
        
        st.pyplot(fig)

    else:
        st.warning("N√£o h√° dados para an√°lise com os crit√©rios selecionados.")

    # DOWNLOAD SIMPLIFICADO
    st.header("üì• Baixar Dados da An√°lise")

    if len(df_analysis) > 0:
        csv = df_analysis[['Taxa de Dose M√°xima (¬µSv/h)', 'Resultado_ra226', 'Resultado_ra228']].to_csv(index=False)
        st.download_button(
            label="üìÑ Baixar planilha com os dados analisados",
            data=csv,
            file_name="analise_limite_5usvh.csv",
            mime="text/csv"
        )

    # RODAP√â COM EXPLICA√á√ïES
    st.markdown("---")
    st.markdown("""
    **üí° Dicas para entender melhor:**
    - **Percentis** mostram "at√© que valor" vai a maioria das amostras
    - **P95** responde: "95% das amostras t√™m dose menor que quanto?"
    - **Limite adequado** = P95 bem abaixo de 5.0 ¬µSv/h + alta % dentro do limite
    - **Amostras por radionucl√≠deo** mostram a distribui√ß√£o real das concentra√ß√µes
    """)

# P√ÅGINA DE ESTUDO DETALHADO (mantida igual)
else:
    st.title("Estudo Detalhado - Metodologia e Par√¢metros")
    
    st.markdown("""
    ## üìã Metodologia Completa da An√°lise
    
    Esta p√°gina detalha os par√¢metros e metodologias utilizados no estudo de valida√ß√£o do limite operacional.
    """)
    
    # Abas para organizar o conte√∫do
    tab1, tab2, tab3, tab4 = st.tabs([
        "üéØ Objetivos", 
        "üìä Metodologia", 
        "‚öôÔ∏è Par√¢metros", 
        "üìà An√°lises"
    ])
    
    with tab1:
        st.header("üéØ Objetivos do Estudo")
        
        st.markdown("""
        ### **Objetivo Principal**
        Validar estatisticamente a adequa√ß√£o do **limite operacional de 5 ¬µSv/h** para materiais 
        com concentra√ß√µes de at√© **8 Bq/g** de Ra-226 e Ra-228.
        
        ### **Objetivos Espec√≠ficos**
        1. **Avaliar a distribui√ß√£o** das taxas de dose nas amostras
        2. **Calcular percentis** (P90, P95, P99) para entender o comportamento da maioria das amostras
        3. **Analisar a rela√ß√£o** entre concentra√ß√£o de radionucl√≠deos e taxa de dose
        4. **Fornecer recomenda√ß√µes** baseadas em evid√™ncias estat√≠sticas
        5. **Criar crit√©rios objetivos** para decis√£o sobre manuten√ß√£o ou ajuste do limite
        """)
        
        st.info("""
        **üí° Contexto Operacional:** 
        Este estudo √© crucial para garantir que os limites estabelecidos protegem adequadamente 
        os trabalhadores enquanto mant√™m a viabilidade operacional.
        """)
    
    with tab2:
        st.header("Metodologia Estat√≠stica")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("üìà An√°lise Descritiva")
            st.markdown("""
            - **Contagem por faixas** de concentra√ß√£o
            - **C√°lculo de m√©dias** e valores m√°ximos
            - **Percentuais** de amostras dentro/acima do limite
            - **Distribui√ß√£o** por radionucl√≠deo
            - **Estat√≠sticas descritivas** completas da taxa de dose
            """)
            
            st.subheader("üéØ Crit√©rios de Decis√£o")
            st.markdown("""
            - **‚úÖ Mant√©m limite:** P95 ‚â§ 5.0 ¬µSv/h E ‚â•95% dentro do limite
            - **‚ö†Ô∏è Avalia cuidado:** ‚â•90% dentro do limite  
            - **‚ùå Reavalia limite:** <90% dentro do limite
            """)
        
        with col2:
            st.subheader("üìä An√°lise de Percentis")
            st.markdown("""
            - **P90:** 90% das amostras t√™m dose ‚â§ X ¬µSv/h
            - **P95:** 95% das amostras t√™m dose ‚â§ X ¬µSv/h  
            - **P99:** 99% das amostras t√™m dose ‚â§ X ¬µSv/h
            """)
            
            st.subheader("üé® Visualiza√ß√£o")
            st.markdown("""
            - **Histogramas** com zonas de risco coloridas
            - **Gr√°ficos de dispers√£o** concentra√ß√£o vs dose
            - **Sistema sem√°foro** para classifica√ß√£o de risco
            - **M√©tricas visuais** para tomada de decis√£o
            """)
        
        st.success("""
        **‚úÖ Abordagem Pr√°tica:** A metodologia foi desenvolvida para ser compreens√≠vel 
        por profissionais operacionais enquanto mant√©m rigor estat√≠stico.
        """)
    
    with tab3:
        st.header("‚öôÔ∏è Par√¢metros e Configura√ß√µes")
        
        st.subheader("üîß Filtros Aplicados")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            ### **Crit√©rios de Inclus√£o**
            - **Concentra√ß√£o m√°xima:** ‚â§ 8 Bq/g para Ra-226 e Ra-228
            - **Dados completos:** Valores num√©ricos em todas as colunas analisadas
            - **Faixa operacional:** Concentra√ß√µes relevantes para opera√ß√£o normal
            
            ### **Vari√°veis Analisadas**
            - **Taxa de Dose M√°xima (¬µSv/h)**
            - **Resultado_ra226 (Bq/g)**
            - **Resultado_ra228 (Bq/g)**
            """)
        
        with col2:
            st.markdown("""
            ### **Limites de Refer√™ncia**
            - **Limite operacional:** 5 ¬µSv/h
            - **Zona de aten√ß√£o:** 3.1 - 5.0 ¬µSv/h
            - **Zona segura:** ‚â§ 3.0 ¬µSv/h
            - **Zona cr√≠tica:** > 5.0 ¬µSv/h
            
            ### **Faixas de Concentra√ß√£o**
            - **Baixa:** ‚â§ 1.0 Bq/g
            - **M√©dia:** 1.1 - 3.0 Bq/g
            - **Alta:** 3.1 - 5.0 Bq/g
            - **Muito alta:** 5.1 - 8.0 Bq/g
            """)
        
        st.warning("""
        **‚ö†Ô∏è Nota Importante:** 
        Os par√¢metros podem ser ajustados na sidebar da p√°gina principal para incluir 
        todos os dados ou apenas aqueles dentro da faixa especificada.
        """)
    
    with tab4:
        st.header("An√°lises Realizadas")
        
        st.subheader("Tipos de An√°lise")
        
        analysis_types = {
            "üìä An√°lise de Distribui√ß√£o": "Histogramas e estat√≠sticas descritivas das taxas de dose",
            "üéØ An√°lise de Percentis": "C√°lculo de P90, P95, P99 para entender a maioria das amostras",
            "üìà An√°lise de Correla√ß√£o": "Rela√ß√£o entre concentra√ß√£o de radionucl√≠deos e taxa de dose",
            "‚ö†Ô∏è An√°lise de Risco": "Classifica√ß√£o em zonas de risco (verde, amarelo, vermelho)",
            "üìã An√°lise por Radionucl√≠deo": "Estat√≠sticas separadas para Ra-226 e Ra-228",
            "üìä Estat√≠stica Descritiva": "An√°lise completa das medidas de tend√™ncia central, dispers√£o e forma da distribui√ß√£o"
        }
        
        for analysis, description in analysis_types.items():
            with st.expander(analysis):
                st.write(description)
        
        st.subheader("üìã Fluxo de An√°lise")
        
        st.markdown("""
        1. **Carregamento e limpeza** dos dados
        2. **Aplica√ß√£o de filtros** conforme crit√©rios estabelecidos
        3. **C√°lculo de estat√≠sticas** descritivas
        4. **An√°lise de percentis** e distribui√ß√£o
        5. **Classifica√ß√£o de risco** baseada em crit√©rios pr√©-definidos
        6. **Gera√ß√£o de recomenda√ß√µes** automatizadas
        7. **Visualiza√ß√£o** dos resultados
        """)
        
        st.info("""
        **üî¨ Rigor Cient√≠fico:** 
        Todas as an√°lises utilizam bibliotecas cient√≠ficas consolidadas (pandas, numpy, scipy) 
        garantindo precis√£o e confiabilidade dos resultados.
        """)
    
    # Se√ß√£o de refer√™ncias
    st.markdown("---")
    st.header("üìö Refer√™ncias e Base T√©cnica")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        ### **Normas e Diretrizes**
        - CNEN-NN-3.01: Diretrizes B√°sicas de Radioprote√ß√£o
        
        """)
    
    with col2:
        st.markdown("""
        ### **Ferramentas Utilizadas**
        - **Python 3.x** com bibliotecas cient√≠ficas
        - **Pandas:** Manipula√ß√£o e an√°lise de dados
        - **NumPy:** C√°lculos num√©ricos e estat√≠sticos
        - **Matplotlib/Seaborn:** Visualiza√ß√£o de dados
        - **Streamlit:** Interface web interativa
        """)
    
    st.success("""
    **üéØ Pr√≥ximos Passos:** 
    Esta metodologia pode ser expandida para incluir outros radionucl√≠deos, 
    diferentes faixas de concentra√ß√£o ou an√°lises temporais.
    """)

# Rodap√© comum
st.sidebar.markdown("---")
st.sidebar.markdown("""
**Desenvolvido por**  
*Equipe de Radioprote√ß√£o e SMS*  
*An√°lise Estat√≠stica para Valida√ß√£o de Limites Operacionais*
""")